import json
import sys
import requests
import time
import hashlib
import os

ip = "http://127.0.0.1:8000"


print("""
****************************************************************************************************
***********************************************/***(/****/******************************************
//*********************************(&&&&&&&&%((//**///*/(#%&&&&%/***********************************
//***/*///******************/%&&&(//*****************************(&&&&%*****************************
////***/****************%&&%******************************************/(&&&%/***********************
///////*/***/*******#&&(***/&/*********************************************(&&&&/*******************
//////*/*///*****%&&//*/%%(&%/%&/*********************************************/&&&&&/***************
///////**///**/&&(***/####&&&&////***********************************************/&&&&**************
/////*//*/***%&%********(%&&&&#%##**************************************************(&&%************
//////////*&&%********(&&*%&%%&(******************************************************(&&(**********
//////////&&(**************%%***********************************************************#&(*********
/////////#&///*/*************************************************************************(&(********
/////////&#//*****************(/**********************************************************&&/*******
////////&%*//**/*************/&%***********************************/&&********************&&#*******
///////#&///////*//********(&&&&&%/*******************************#%&&&&/*****************%&&*******
///////&&*///*****************&&*********************************(#%%%/*******************/&&*******
///////&(**/*/*****************************************************#%/*********************&%*******
///////&(/*/****************************%(*************************************************&&*******
//////(&(/***/****/**********************/&&(**********/&&*********************************%%*******
////*/(&#///////*/*/****/***********************(((%##(************************************%&/******
//////%@/*//**//***************************************************************************&&*******
//////&&/*/*///***********************#&&&@@@@@@@&&&&&&(/*********************************#&%*******
//////@&(/*///****/***************/&&&%((/*************//%&&&(****************************/&#*******
/////@@&//**/**/*****************&&&/***********************/&&&(*************************%&(*******
/////@@&/*//*/****************(&&/*****************************&&&&/*********************%&&/*******
/////%@&////////****/*******#@&***********************************#&&(*******************%&&********
//////@@(////////**********&%/**************************************%&&/******************&%********
//////%@(///////*/*******/&(/****************************************/&&/****************/&/********
//////%@#///////////****/&(*******************************************(&&****************#&*********
/////(#@#/////////**//*/@(/********************************************#&#**************&&&*********
////(/(@#//////////*//*(&/**********************************************&&**************&&#*********
//((///@@//////////////&&***********************************************%&/*************&&%*********
//////(@@(////////*//*/&#*/*********************************************(&/*************&#**********
((/////&@%///////////*/@&//*////****************************************%&/************/&#**********
(//////#@@/////////////@@/**********************************************&&*************(&***********
/((////%@@#%########%%#%&%&&(((((//*//////**//(##%%#////////(//(((####%#&&%((((((##((((%&%**********
(((///@@@(/////////*(@@###/&&*************/&&*****#&#***************(&&***%&&#**********/&&#********
////#@@@(//////////@@%/////&%//**/*/******/&&*****(&(***************&&(*****%&&(**********#&&/******
//(%@@@//////////%@@///////&#*//*////*****(&%*****/&(**************/&&*******/&&&***********%&&/****
/(&@@&/////////#@@&////////&%/***////**/**/&(*****/&#**************&&#**********&&/***********&&%***
///@@@@@@@@@@@@@(//////////#@@@@@@@@@@@&@&#(******/&&&&&&@&&&@@@&&@@&************(&&&&&&&&&&&&&&(***\n
""")
s="Wilkommen bei Oktopost"
for i in s:
    print(i, end="")
    time.sleep(0.1)
print("\n")


# function to create users with unique usernames and a password
def createUser():
    # --------------------------------------------------
    # take user input for verification and turn it into a JSON String with @jsonpickle
    username =input("Gebe einen Benuternamen an:\n")
    password =input("Passwort: ")

    # hash the password with random 32 bit long salt and 200.000 iterations of sha256
    clum =os.urandom(32)
    key =hashlib.pbkdf2_hmac('sha256', password.encode('utf-8'), clum, 200000)

    # combine salt and key and use them as login credentials together with username
    LOGIN_CREDENTIALS =json.loads({"username":username, "hash":clum+key})

    # --------------------------------------------------
    # try to make post request to web page using previously made JSON String data with @requests
    try:
        response =requests.post(ip, data=data)
    except requests.ConnectionError as err:
        print("Server Error:\n" + str(err))
    # --------------------------------------------------
    # create user if everything is allright or restart function if userName already exists
    if response.status_code == 200:
        print(response.text)
        return(LOGIN_CREDENTIALS)
    # --------------------------------------------------

# --------------------------------------------------
# choose between creating user or interacting with the program as a user
action = int(input("Gebe Aktion ein     \"0\" für Posts     \"1\" um User zu erstellen:\n"))


# for counter in range(0, 2):
username = input("Gebe deinen Benuternamen an:\n")
#     password = input("Passwort: ")
#
#     # Request salt from Server to hash password for verification
#     salt =ip+"/salts/"+username
#     salt =json.loads(salt)
#
#     clum =salt["salt"]
#     key = hashlib.pbkdf2_hmac('sha256', password.encode('utf-8'), clum, 200000)
#
#     hash =clum*key
#     js ={
#         "username": username,
#         "hash": hash
#     }
#
#     # check if the hash of the entered password fits the correct hash
#     # if so, then you can log in, else you have to reenter your username and password
#     correct =requests.post(ip, js)
#
#     if correct:
#         break
#     else:
#         print("Falscher Username oder Passwort.")
#
# if not correct:
#     sys.exit("Zu oft falsch eingegeben. Tschüss :)")


if action== 1:
    LOGIN_CREDENTIALS= createUser()
# --------------------------------------------------
while True:
    user_in = input("r - Gibt neueste Posts aus; p - sendet einen Post\n")
    match user_in:
        case "r":
            amount = input("Wie viele Posts sollen angezeigt werden? (Max 20):")
            if amount > 20: sys.exit("Hey, nur 20")
            response = None
            # --------------------------------------------------
            print(requests.get(ip+'/posts'+'?amount='+amount))
            # --------------------------------------------------

        # --------------------------------------------------
        case "p":
            title = input("Titel: \n")
            content = input("Inhalt:\n")
            data = requests.post(ip+"/posts"+"?username="+username, json={"title":title, "content":content})
        # --------------------------------------------------
